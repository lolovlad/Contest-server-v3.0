# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from MainServer.Services.protos import jsonTest_pb2 as MainServer_dot_Models_dot_protos_dot_jsonTest__pb2


class JsonTestApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllSettingsTests = channel.unary_unary(
                '/JsonTestApi/GetAllSettingsTests',
                request_serializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsRequest.SerializeToString,
                response_deserializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsResponse.FromString,
                )
        self.GetChunkTest = channel.unary_unary(
                '/JsonTestApi/GetChunkTest',
                request_serializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetChunkTestRequest.SerializeToString,
                response_deserializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.ChunkTests.FromString,
                )


class JsonTestApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllSettingsTests(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChunkTest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JsonTestApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllSettingsTests': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllSettingsTests,
                    request_deserializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsRequest.FromString,
                    response_serializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsResponse.SerializeToString,
            ),
            'GetChunkTest': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChunkTest,
                    request_deserializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetChunkTestRequest.FromString,
                    response_serializer=MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.ChunkTests.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'JsonTestApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JsonTestApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllSettingsTests(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JsonTestApi/GetAllSettingsTests',
            MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsRequest.SerializeToString,
            MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetAllSettingsTestsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChunkTest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/JsonTestApi/GetChunkTest',
            MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.GetChunkTestRequest.SerializeToString,
            MainServer_dot_Models_dot_protos_dot_jsonTest__pb2.ChunkTests.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
